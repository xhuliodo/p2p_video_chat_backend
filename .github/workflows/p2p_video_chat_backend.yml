# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: p2p_video_chat_backend

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22.1"

      - name: Build
        run: go build -v cmd/main.go

      - name: Test
        run: go test -v ./...

      - name: Set up SSH key
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
        run: |
          echo "$SSH_KEY" > ssh_key
          chmod 600 ssh_key
          mkdir -p ~/.ssh
          ssh-keyscan -H $SERVER_HOST >> ~/.ssh/known_hosts

      - name: Upload artifact via FTP
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          sftp -i ssh_key "$SERVER_USER@$SERVER_HOST" << 'EOF'
            put ./main /opt/p2p_video_chat_backend
            bye
          EOF

      - name: Deploy via SSH
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          ssh -i ssh_key "$SERVER_USER@$SERVER_HOST" << 'EOF'
            echo "Deploying p2p_video_chat_backend..."
            systemctl restart p2p_video_chat_backend
          EOF

      - name: Clean up SSH key
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          rm ssh_key
